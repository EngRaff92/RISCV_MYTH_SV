$date
	Thu Jun  2 17:52:16 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module calculator_piped $end
$var wire 1 ! calc_clock $end
$var wire 1 " calc_rst $end
$var wire 32 # op_in1 [31:0] $end
$var wire 32 $ op_in2 [31:0] $end
$var wire 1 % op_in_sel $end
$var wire 3 & opcode [2:0] $end
$var wire 1 ' valid_res $end
$var wire 64 ( sampled_res [63:0] $end
$var wire 64 ) result [63:0] $end
$var wire 1 * int_valid $end
$var reg 1 + overflow $end
$var reg 64 , place_h_res [63:0] $end
$scope module u_ff_sampling $end
$var wire 1 ! ff_clk $end
$var wire 1 - ff_en $end
$var wire 64 . ff_in_d [63:0] $end
$var wire 64 / ff_out_not_q [63:0] $end
$var wire 64 0 ff_out_q [63:0] $end
$var wire 1 " ff_rst $end
$var wire 1 1 l_clk $end
$var reg 64 2 q [63:0] $end
$scope begin proc_ip_calculation $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 2
01
bx 0
bx /
b0 .
1-
b0 ,
0+
1*
bx )
bx (
1'
b0 &
0%
b0 $
b0 #
0"
0!
$end
#10
b0 )
b1111111111111111111111111111111111111111111111111111111111111111 /
b0 (
b0 0
b0 2
1"
#20
0"
11
1!
#25
b11101 ,
b11101 .
b1 &
b11001 #
b100 $
01
0!
#30
b11101 )
b1111111111111111111111111111111111111111111111111111111111100010 /
b11101 (
b11101 0
b11101 2
11
1!
#35
01
0!
#40
11
1!
#45
b10001100 ,
b10001100 .
b10 &
b111 #
b10100 $
01
0!
#50
b10001100 )
b1111111111111111111111111111111111111111111111111111111101110011 /
b10001100 (
b10001100 0
b10001100 2
11
1!
#55
01
0!
#60
11
1!
#65
b10000 ,
b10000 .
b11 &
b11011 #
b101011 $
1%
01
0!
#70
b10000 )
b1111111111111111111111111111111111111111111111111111111111101111 /
b10000 (
b10000 0
b10000 2
11
1!
#75
01
0!
#80
11
1!
#85
b101 ,
b101 .
b100 &
b10000 #
b11101 $
0%
01
0!
#90
b101 )
b1111111111111111111111111111111111111111111111111111111111111010 /
b101 (
b101 0
b101 2
11
1!
#95
01
0!
#100
11
1!
#105
b0 ,
b0 .
b101 &
b100110 #
b110010 $
1%
01
0!
#110
b0 )
b1111111111111111111111111111111111111111111111111111111111111111 /
b0 (
b0 0
b0 2
11
1!
#115
01
0!
#120
11
1!
#121
