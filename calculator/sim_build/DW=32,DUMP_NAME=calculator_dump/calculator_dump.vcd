$date
	Thu Jun  2 20:34:53 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module calculator $end
$var wire 1 ! calc_clock $end
$var wire 1 " calc_rst $end
$var wire 32 # op_in1 [31:0] $end
$var wire 32 $ op_in2 [31:0] $end
$var wire 1 % op_in_sel $end
$var wire 3 & opcode [2:0] $end
$var wire 1 ' valid_res $end
$var wire 64 ( sampled_res [63:0] $end
$var wire 32 ) root_out [31:0] $end
$var wire 64 * result [63:0] $end
$var wire 1 + int_valid $end
$var reg 1 , overflow $end
$var reg 64 - place_h_res [63:0] $end
$scope module u_ff_sampling $end
$var wire 1 ! ff_clk $end
$var wire 1 . ff_en $end
$var wire 64 / ff_in_d [63:0] $end
$var wire 64 0 ff_out_not_q [63:0] $end
$var wire 64 1 ff_out_q [63:0] $end
$var wire 1 " ff_rst $end
$var wire 1 2 l_clk $end
$var reg 64 3 q [63:0] $end
$scope begin proc_ip_calculation $end
$upscope $end
$upscope $end
$scope module u_sqrt_c $end
$var wire 32 4 op_in [31:0] $end
$var wire 32 5 op_out [31:0] $end
$var reg 32 6 a [31:0] $end
$var reg 18 7 l [17:0] $end
$var reg 16 8 q [15:0] $end
$var reg 18 9 r [17:0] $end
$var reg 18 : re [17:0] $end
$var integer 32 ; i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 ;
b111111111111111111 :
b11 9
b0 8
b111111111111111100 7
b0 6
b0 5
b0 4
bx 3
02
bx 1
bx 0
b0 /
1.
b0 -
0,
1+
bx *
b0 )
bx (
1'
b0 &
0%
b0 $
b0 #
0"
0!
$end
#10
b0 *
b1111111111111111111111111111111111111111111111111111111111111111 0
b0 (
b0 1
b0 3
1"
#20
0"
12
1!
#25
b101 )
b101 5
b101 8
b1010 :
b1011 9
b111111111111111111 7
b10000 ;
b0 6
b1000100 -
b1000100 /
b100011 4
b1 &
b100011 #
b100001 $
1%
02
0!
#30
b1000100 *
b1111111111111111111111111111111111111111111111111111111110111011 0
b1000100 (
b1000100 1
b1000100 3
12
1!
#35
02
0!
#40
12
1!
#45
b111111111111111110 :
b1101 9
b1011 7
b10000 ;
b110 )
b110 5
b110 8
b0 6
b1000110100 -
b1000110100 /
b101111 4
b10 &
b1100 #
b101111 $
0%
02
0!
#50
b1000110100 *
b1111111111111111111111111111111111111111111111111111110111001011 0
b1000110100 (
b1000110100 1
b1000110100 3
12
1!
#55
02
0!
#60
12
1!
#65
b111111111111111110 :
b1011 9
b111111111111110011 7
b10000 ;
b100 )
b100 5
b100 8
b0 6
b100 -
b100 /
b10111 4
b11 &
b10111 #
b11011 $
1%
02
0!
#70
b100 *
b1111111111111111111111111111111111111111111111111111111111111011 0
b100 (
b100 1
b100 3
12
1!
#75
02
0!
#80
12
1!
#85
b111111111111111100 :
b1101 9
b1001 7
b10000 ;
b110 )
b110 5
b110 8
b0 6
b110 -
b110 /
b101101 4
b100 &
b111 #
b101101 $
0%
02
0!
#90
b110 *
b1111111111111111111111111111111111111111111111111111111111111001 0
b110 (
b110 1
b110 3
12
1!
#95
02
0!
#100
12
1!
#105
b111111111111111111 :
b1101 9
b1100 7
b10000 ;
b110 )
b110 5
b110 8
b0 6
b0 -
b0 /
b110000 4
b101 &
b110000 #
b1110 $
1%
02
0!
#110
b0 *
b1111111111111111111111111111111111111111111111111111111111111111 0
b0 (
b0 1
b0 3
12
1!
#115
02
0!
#120
12
1!
#121
